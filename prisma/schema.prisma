// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator py {
  provider = "prisma-client-py"
  recursive_type_depth = -1
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Spell {
  id          Int      @id @default(autoincrement())
  name        String
  source      String
  school      String
  level       String
  castingTime String
  range       String?   // Shield has nothing
  components  String?   // Shield has nothing
  duration    String?   // Shield and Dragonic Transformation have nothing
  description String[]  // Shield has nothing
  list        String[]  // 502 Spells have nothing // A lot of spells have null alongside content
  upcast      String?   // 352 Spells have nothing
  spellLists  String[]
}

model Lineage {
  id    Int    @id @default(autoincrement())
  name  String
  races Race[]
}

model Race {
  id          Int          @id @default(autoincrement())
  name        String
  description Description?
  source      String
  feats       Feat[]
  subRaces    Race[]       @relation("subrace")

  lineageId Int
  lineage   Lineage @relation(fields: [lineageId], references: [id])

  raceId     Int   @unique
  parentRace Race? @relation("subrace", fields: [raceId], references: [id])
}

model Description {
  id      Int      @id @default(autoincrement())
  indent  Int
  content String[]
  table   Table?

  raceId Int  @unique
  race   Race @relation(fields: [raceId], references: [id])
}

model Feat {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  indent      Int
  table       Table?

  raceId Int  @unique
  race   Race @relation(fields: [raceId], references: [id])
}

model Table {
  id     Int      @id @default(autoincrement())
  name   String?
  header String[]
  rows   Row[]

  descriptionId Int         @unique
  description   Description @relation(fields: [descriptionId], references: [id])
  featId        Int         @unique
  feat          Feat        @relation(fields: [featId], references: [id])
}

model Row {
  id      Int      @id @default(autoincrement())
  content String[]

  tableId Int   @unique
  table   Table @relation(fields: [tableId], references: [id])
}
